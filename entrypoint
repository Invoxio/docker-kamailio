#!/bin/bash

set -e

. ~/.bashrc

# accepts: debug info notice warn error critical alert
: ${KAMAILIO_LOG_LEVEL:=info}
: ${KAMAILIO_LOG_COLOR:=true}

: ${MY_HOSTNAME:=$(hostname -f)}
: ${MY_IP_ADDRESS:=$(hostname -i | head -n 1)}
: ${MY_AMQP_HOST:=rabbitmq}
: ${MY_SECONDARY_AMQP_HOST:=rabbitmq-backup}
: ${MY_WEBSOCKET_DOMAIN:=sip.li}

: ${KAMAILIO_SHM_MEMORY:=128}
: ${KAMAILIO_PKG_MEMORY:=4}

: ${KAMAILIO_ENABLE_SECONDARY_AMQP:=false}

: ${KAMAILIO_ENABLE_ROLES:=websockets,message}

[ "$KAMAILIO_LOG_COLOR" == true ] && CLOG_ARGS='-e'


declare -A LOG_LEVEL_MAP=( 
    [debug]=L_DBG 
    [info]=L_INFO 
    [notice]=L_NOTICE 
    [warn]=L_WARN
    [error]=L_ERR 
    [critical]=L_CRIT 
    [alert]=L_ALERT )


function get_freeswitch_nodes {
    if [ "$ENVIRONMENT" == "local" ]; then
        FREESWITCH_NODES=${FREESWITCH_NODES:=freeswitch.local}
    else
        KUBERNETES_AUTH_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        FREESWITCH_NODES=$(curl -sSL -k -H "Authorization: Bearer $KUBERNETES_AUTH_TOKEN" https://$KUBERNETES_SERVICE_HOST/api/v1/endpoints | jq -r ".items[] | select(.metadata.name == \"freeswitch\") | .subsets[] | .addresses[] | .ip")
    fi
    [[ $FREESWITCH_NODES = '' ]] && return 1
    echo "$FREESWITCH_NODES"
}


echo "Converting log level from $KAMAILIO_LOG_LEVEL ..."
LOG_LEVEL="${LOG_LEVEL_MAP[$(echo "$KAMAILIO_LOG_LEVEL" | awk '{print tolower($0)}')]}"

echo "Setting log level to: $LOG_LEVEL ..."
sed -ir "/^debug/s/\(L_.*\)$/$LOG_LEVEL/" /etc/kazoo/kamailio/local.cfg

echo "Rewriting kamailio local.cfg ..."
sed -ir "/MY_HOSTNAME/s/kamailio\.2600hz\.com/$MY_HOSTNAME/" /etc/kazoo/kamailio/local.cfg
sed -ir "/MY_IP_ADDRESS/s/127\.0\.0\.1/$MY_IP_ADDRESS/" /etc/kazoo/kamailio/local.cfg
sed -ir "/MY_AMQP_URL/s/127\.0\.0\.1/$MY_AMQP_HOST/" /etc/kazoo/kamailio/local.cfg
sed -ir "/MY_WEBSOCKET_DOMAIN/s/2600hz\.com/$MY_WEBSOCKET_DOMAIN/" /etc/kazoo/kamailio/local.cfg

if [[ $KAMAILIO_ENABLE_SECONDARY_AMQP = true ]]; then
    sed -ir "/MY_AMQP_URL/a \
    \
    #!substdef \"!MY_AMQP_URL_SECONDARY!kazoo://guest:guest@${MY_SECONDARY_AMQP_HOST}:5672!g\"" \
        /etc/kazoo/kamailio/local.cfg
fi


echo "Enabling roles: ${roles_to_enable[@]} in local.cfg ..."
IFS=',' read -r -a roles_to_enable <<< `echo "$KAMAILIO_ENABLE_ROLES" | awk '{print toupper($0)}'`

if [[ -n $roles_to_enable ]]
then
    for role in "${roles_to_enable[@]}"
    do
        sed -ir "/$role-ROLE/s/# # //" /etc/kazoo/kamailio/local.cfg
    done
fi

cat /etc/kazoo/kamailio/local.cfg


until get_freeswitch_nodes
do
    echo "waiting on freeswitch nodes ..."
    sleep 5  
done
echo "Adding freeswitch nodes to dispatcher ..."
sed -ir '/1 sip:/d' /etc/kazoo/kamailio/dbtext/dispatcher

for node in `echo $FREESWITCH_NODES`; do
    echo "1 sip:$node:11000 0" >> /etc/kazoo/kamailio/dbtext/dispatcher
done

cat /etc/kazoo/kamailio/dbtext/dispatcher


echo "Ensuring Permissions ..."
chown -R kamailio:kamailio /etc/kazoo/kamailio


echo "Starting kamailio ..."
cd ~
    exec /usr/sbin/kamailio -DD -E -m $KAMAILIO_SHM_MEMORY -M $KAMAILIO_PKG_MEMORY -u kamailio -g kamailio $CLOG_ARGS 2>&1
