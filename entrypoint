#!/bin/bash -l

set -e

app=kamailio
user=$app

declare -A LOG_LEVEL_MAP=( 
    [debug]=L_DBG 
    [info]=L_INFO 
    [notice]=L_NOTICE 
    [warn]=L_WARN
    [error]=L_ERR 
    [critical]=L_CRIT 
    [alert]=L_ALERT )

if [ -f /etc/default/$app ]
then
    . /etc/default/$app
fi

: ${RABBITMQ_USER:=guest}
: ${RABBITMQ_PASS:=guest}

: ${RABBITMQ_HOST_A:=rabbitmq-alpha}
: ${RABBITMQ_HOST_B:=rabbitmq-beta}

# accepts: debug info notice warn error critical alert
: ${KAMAILIO_LOG_LEVEL:=info}
: ${KAMAILIO_LOG_COLOR:=true}

: ${KAMAILIO_ENABLE_SECONDARY_AMQP:=false}

: ${KAMAILIO_MY_HOSTNAME:=$(hostname -f)}
: ${KAMAILIO_MY_IP_ADDRESS:=$(hostname -i | head -1)}
: ${KAMAILIO_MY_AMQP_URL:=kazoo://$RABBITMQ_USER:$RABBITMQ_PASS@$RABBITMQ_HOST_A:5672}
: ${KAMAILIO_MY_AMQP_URL_SECONDARY:=kazoo://$RABBITMQ_USER:$RABBITMQ_PASS@$RABBITMQ_HOST_B:5672}
: ${KAMAILIO_MY_WEBSOCKET_DOMAIN:=sip.li}

: ${KAMAILIO_SHM_MEMORY:=128}
: ${KAMAILIO_PKG_MEMORY:=8}
: ${KAMAILIO_CHILD_PROC:=8}

: ${KAMAILIO_ENABLE_ROLES:=websockets,message}

: ${KAMAILIO_FREESWITCH_SYNC_SOURCE:=dns}
: ${KAMAILIO_FREESWITCH_SYNC_ARGS:=freeswitch}


function log 
{
    local msg="$1"
    echo -e "\E[36m[*]\E[0m ${msg}" 
}

# function get_freeswitch_nodes_dns
# {
#     local query=$(dig +short +search freeswitch)
#     [[ -z $query ]] && return 1
#     echo "$query"
# }

# function get_freeswitch_nodes_kubernetes
# {

#     local kube_token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
#     local query=$(curl -sSL -k -H "Authorization: Bearer $token" https://kubernetes/api/v1/endpoints | jq -r ".items[] | select(.metadata.name == \"freeswitch\") | .subsets[] | .addresses[] | .ip")
#     [[ -z $query ]] && return 1
#     echo "$query"
# }

log "Converting log level from $KAMAILIO_LOG_LEVEL ..."
KAMAILIO_LOG_LEVEL=${LOG_LEVEL_MAP[${KAMAILIO_LOG_LEVEL,,}]}

log "Setting log level to: $KAMAILIO_LOG_LEVEL ..."
sed -i -r "/^debug /s/\w*$/${KAMAILIO_LOG_LEVEL}/" /etc/kamailio/local.cfg


log "Rewriting local.cfg ..."
sed -i "/MY_HOSTNAME/s/\(MY_HOSTNAME\!\).*\(\!\)/\1${KAMAILIO_MY_HOSTNAME}\\2/" /etc/kamailio/local.cfg
sed -i "/MY_IP_ADDRESS/s/\(MY_IP_ADDRESS\!\).*\(\!\)/\1${KAMAILIO_MY_IP_ADDRESS}\2/" /etc/kamailio/local.cfg 
sed -i "/MY_AMQP_URL/s/\(MY_AMQP_URL\!\).*\(\!\)/\1${KAMAILIO_MY_AMQP_URL//\//\\\/}\2/" /etc/kamailio/local.cfg 
sed -i "/MY_WEBSOCKET_DOMAIN/s/\(MY_WEBSOCKET_DOMAIN\!\).*\(\!\)/\1${KAMAILIO_MY_WEBSOCKET_DOMAIN}\2/" /etc/kamailio/local.cfg 


if [[ $KAMAILIO_ENABLE_SECONDARY_AMQP = true ]]
then
    if ! grep -q MY_AMQP_URL_SECONDARY /etc/kamailio/local.cfg
    then
        sed -i "/MY_AMQP_URL/a \
            \
            #!substdef \"!MY_AMQP_URL_SECONDARY!${KAMAILIO_MY_AMQP_URL_SECONDARY//\//\\\/}!g\"" \
                /etc/kamailio/local.cfg
    else
        sed -i "/MY_AMQP_URL_SECONDARY/s/\(MY_AMQP_URL_SECONDARY\!\).*\(\!\)/\1${KAMAILIO_MY_AMQP_URL_SECONDARY//\//\\\/}\2/" /etc/kamailio/local.cfg 
    fi
else
    if grep -q MY_AMQP_URL_SECONDARY /etc/kamailio/local.cfg
    then
        sed -i '/MY_AMQP_URL_SECONDARY/d' /etc/kamailio/local.cfg
    fi
fi

cat /etc/kamailio/local.cfg | tail -n 94 | head -n 25


log "Enabling roles: ${KAMAILIO_ENABLE_ROLES} in local.cfg ..."
if [[ -n $KAMAILIO_ENABLE_ROLES ]]
then
    for role in $(echo "${KAMAILIO_ENABLE_ROLES//,/ }")
    do 
        sed -i "/${role^^}_ROLE/s/# # //" /etc/kamailio/local.cfg
    done

    cat /etc/kamailio/local.cfg | head -n 30 | tail -n 22 
fi

log "Copying dbtext files to /volumes/ram/dbtext ..."
mkdir -p /volumes/ram/dbtext
cp -R /etc/kamailio/dbtext/* /volumes/ram/dbtext
chown -R $user:$user /volumes/ram/dbtext


log "Syncing freeswitch servers ..."
sync-freeswitch-servers $KAMAILIO_FREESWITCH_SYNC_SOURCE $KAMAILIO_FREESWITCH_SYNC_ARGS

# until get_freeswitch_nodes
# do
#     echo "waiting on freeswitch nodes ..."
#     sleep 5  
# done

# case "$KAMAILIO_GET_FREESWITCH_NODES_FROM" in
#     local)
#         : ${FREESWITCH_NODES:=freeswitch.local}
#         ;;
#     dns)
#         echo -n "Querying DNS for freeswitch nodes ."
#         until [[ ! -z $FREESWITCH_NODES ]]
#         do
#             sleep 1
#             FREESWITCH_NODES=$(get_freeswitch_nodes_dns)
#             echo -n '.'
#         done
#         ;;
#     kubernetes)
#         echo -n "Querying kubernetes for freeswitch nodes ."
#         until [[ ! -z $FREESWITCH_NODES ]]
#         do
#             sleep 1
#             FREESWITCH_NODES=$(get_freeswitch_nodes_kubernetes)
#             echo -n '.'
#         done
#         ;;
#     *)
#         : ${FREESWITCH_NODES:=}  
#         ;;
# esac

# [[ ! -z $FREESWITCH_NODES ]] && echo "Got freeswitch nodes: $FREESWITCH_NODES"

# echo "Getting freeswitch nodes ..."
# if [[ $KAMAILIO_GET_FREESWITCH_NODES_FROM = 'local' ]]
# then
#     : ${FREESWITCH_NODES:=freeswitch.local}
# elif [[ $KAMAILIO_GET_FREESWITCH_NODES_FROM = 'dns' ]]
# then
#     echo -n "Querying DNS for freeswitch nodes ."
#     until [[ ! -z $FREESWITCH_NODES ]]
#     do
#         sleep 1
#         FREESWITCH_NODES=$(get_freeswitch_nodes_dns)
#         echo -n '.'
#     done
# elif [[ $KAMAILIO]]
# else
#     : ${FREESWITCH_NODES:=}
# fi

# [[ ! -z $FREESWITCH_NODES ]] && echo "Got freeswitch nodes: $FREESWITCH_NODES"


# echo "Adding freeswitch nodes to dispatcher ..."
# if [[ ! -z $FREESWITCH_NODES ]]
# then
#     sed -i '/sip\\:/d' /etc/kamailio/dbtext/dispatcher
    
#     for node in $(echo $FREESWITCH_NODES); do
#         echo "1:1:sip\:$node\:11000:0:1: : " >> /etc/kamailio/dbtext/dispatcher
#     done
    
#     cat /etc/kamailio/dbtext/dispatcher
# fi


log "Ensuring Permissions ..."
chown -R $user:$user /etc/kamailio


log "Building arguments ..."
[[ $KAMAILIO_LOG_COLOR = true ]] && CLOG_ARGS='-e'


log "Starting $app ..."
cd ~
    exec kamailio -DD -E -m $KAMAILIO_SHM_MEMORY -M $KAMAILIO_PKG_MEMORY -u $user -g $user -n $KAMAILIO_CHILD_PROC $CLOG_ARGS 2>&1
